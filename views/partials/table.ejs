<div id="table" v-cloak>
  <!-- SideNav slide-out button -->
  <a href="#" data-activates="slide-out" class="btn btn-primary p-3 button-collapse"><i class="fas fa-bars"></i></a>

  <!-- Sidebar navigation -->
  <div id="slide-out" class="side-nav fixed wide sn-bg-1">
    <ul class="custom-scrollbar">
      <!-- Logo -->
      <li>
        <div class="logo-wrapper sn-ad-avatar-wrapper">
          <a href="#"><img src="https://mdbootstrap.com/img/Photos/Avatars/img%20(10).jpg"
              class="rounded-circle"><span>Anna Deynah</span></a>
        </div>
      </li>
      <!--/. Logo -->
      <!-- Side navigation links -->
      <li>
        <ul class="collapsible collapsible-accordion">
          <li><a class="collapsible-header waves-effect arrow-r active"><i
                class="sv-slim-icon fas fa-chevron-right"></i> Submit blog<i
                class="fas fa-angle-down rotate-icon"></i></a>
            <div class="collapsible-body">
              <ul>
                <li><a href="#" class="waves-effect active">
                    <span class="sv-slim"> SL </span>
                    <span class="sv-normal">Submit listing</span></a>
                </li>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> RF </span>
                    <span class="sv-normal">Registration form</span></a>
                </li>
              </ul>
            </div>
          </li>
          <li><a class="collapsible-header waves-effect arrow-r"><i class="sv-slim-icon far fa-hand-point-right"></i>
              Instruction<i class="fas fa-angle-down rotate-icon"></i></a>
            <div class="collapsible-body">
              <ul>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> FB </span>
                    <span class="sv-normal">For bloggers</span></a>
                </li>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> FA </span>
                    <span class="sv-normal">For authors</span></a>
                </li>
              </ul>
            </div>
          </li>
          <li><a class="collapsible-header waves-effect arrow-r"><i class="sv-slim-icon fas fa-eye"></i> About<i
                class="fas fa-angle-down rotate-icon"></i></a>
            <div class="collapsible-body">
              <ul>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> I </span>
                    <span class="sv-normal">Introduction</span></a>
                </li>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> MM </span>
                    <span class="sv-normal">Monthly meetings</span></a>
                </li>
              </ul>
            </div>
          </li>
          <li><a class="collapsible-header waves-effect arrow-r"><i class="sv-slim-icon far fa-envelope"></i> Contact
              me<i class="fas fa-angle-down rotate-icon"></i></a>
            <div class="collapsible-body">
              <ul>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> F </span>
                    <span class="sv-normal">FAQ</span></a>
                </li>
                <li><a href="#" class="waves-effect">
                    <span class="sv-slim"> W </span>
                    <span class="sv-normal">Write a message</span></a>
                </li>
              </ul>
            </div>
          </li>
          <li><a id="toggle" class="waves-effect"><i class="sv-slim-icon fas fa-angle-double-left"></i>Minimize menu</a>
          </li>
        </ul>
      </li>
      <!--/. Side navigation links -->
    </ul>
    <div class="sidenav-bg rgba-blue-strong"></div>
  </div>
  <!--/. Sidebar navigation -->


  <h1 class="title is-capitalized"><%= model %></h1>

  <!-- Button trigger modal -->
  <button type="button" class="btn btn-sm btn-outline-info" data-toggle="modal" data-target="#newModal">
    <%= __('Nueva entrada') %>
  </button>

  <input type="text" class="form-control" />



  <div class="table-container">
    <table class="table is-hoverable is-fullwidth is-narrow">
      <thead>
        <tr>
          <th>createdAt</th>
          <th>updatedAt</th>
          <% for (let prop in all[0]) { %> <% if (prop !== 'createdAt' && prop
          !== 'updatedAt') { %>
          <th><%= prop %></th>
          <% } %> <% } %>
          <th><%# Action buttons %></th>
        </tr>
      </thead>

      <tbody>
        <% all.forEach((item, index) => { %>
        <tr class="is-relative">
          <td>
            <js-timestamp :at="<%= item['createdAt'] %>"></js-timestamp>
          </td>
          <td>
            <js-timestamp :at="<%= item['updatedAt'] %>"></js-timestamp>
          </td>
          <% delete item.createdAt; delete item.updatedAt; for (let prop in
          item) {%>
          <td><%= item[prop] %></td>
          <% } %>
          <td class="table__actions">
            <button class="btn btn-outline-primary">
              Edit
            </button>
            <button class="btn btn-outline-danger" v-on:click="delete('e')">
              Delete
            </button>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <h2 class="subtitle"><%= __('NÃºmero de entradas') %> <%= total %></h2>

  <!-- Modal -->
  <div class="modal fade" id="newModal" tabindex="-1" role="dialog" aria-labelledby="newModalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="newModalTitle">
            <%= __(`Crear ${model}`) %>
          </h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <% for (let name in attributes) {
          const attribute = attributes[name];
          // TODO: collections not supported yet
          if (attribute.collection) { continue }

          let type = 'text'
          let klass = 'input'
          if (attribute.type === 'number') {
            type = 'number'
          } else if (attribute.type === 'boolean') {
            type = 'checkbox'
            klass = 'checkbox'
          }

          const disabled =
            (attribute.autoMigrations && attribute.autoMigrations.autoIncrement) ||
            attribute.autoUpdatedAt ||
            attribute.autoCreatedAt %>
          // TODO: collections not supported yet
          if (attribute.collection) {
          continue }
          let type = 'text' let klass = 'input' if (attribute.type
          === 'number') { type = 'number' } else if (attribute.type ===
          'boolean') { type = 'checkbox' klass = 'checkbox' } const disabled =
          (attribute.autoMigrations && attribute.autoMigrations.autoIncrement)
          || attribute.autoUpdatedAt || attribute.autoCreatedAt %>
          <div class="field is-horizontal">
            <div class="field-label is-normal">
              <label class="label"><%= name %></label>
            </div>
            <div class="field-body">
              <div id="attribute-<%= name %>" class="field">
                <div class="control">
                  <% if (attribute.model) { %>
                  <div class="dropdown autocomplete" data-model="<%= attribute.model %>">
                    <div class="dropdown-trigger">
                      <input name="<%= name %>" class="input" type="text" placeholder="" aria-haspopup="true" />
                    </div>
                    <div class="dropdown-menu" role="menu"></div>
                  </div>
                  <% } else { %> <input class="<%= klass %>" type="<%= type %>" name="<%= name %>"
                    <%= disabled ? 'disabled' : '' %>> <% } %>
                </div>
                <p class="help"><%= attribute.required ? 'Required' : '' %></p>
              </div>
            </div>
          </div>
          <% } %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">
            Close
          </button>
          <button type="button" class="btn btn-outline-info" onclick="save(event)">
            Save changes
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  // SideNav Button Initialization
  $(".button-collapse").sideNav();
  // SideNav Scrollbar Initialization
  var sideNavScrollbar = document.querySelector('.custom-scrollbar');
  Ps.initialize(sideNavScrollbar);

</script>
<script>
  const editModal = document.querySelector('#modal-edit');
  const model = '<%= model %>';

  function openEditModal(itemIndex) {
    editModal.classList.add('is-active');

    const item = itemIndex !== undefined ? SAILS_LOCALS.all[itemIndex] : null;
    for (let attribute in SAILS_LOCALS.attributes) {
      const input = document.querySelector(`#attribute-${attribute} input`);

      if (!input) {
        continue;
      }

      if (input.type === 'checkbox') {
        input.checked = item ? item[attribute] : false;
      } else {
        input.value = item ? item[attribute] : '';
      }
    }

    for (let autocomplete of document.querySelectorAll('.autocomplete')) {
      bulmahead(
        autocomplete.querySelector('input'),
        autocomplete.querySelector('.dropdown-menu'),
        v => {
          return fetch(
              `/${autocomplete.dataset.model}?where={"name":{"contains":"${v}"}}&populate=false`,
            )
            .then(response => {
              if (!response.ok) {
                throw Error(response.statusText);
              }

              return response.json();
            })
            .then(json => {
              return json.map(({
                id,
                name
              }) => {
                return {
                  label: name,
                  value: id,
                };
              });
            })
            .catch(e => {
              console.error("Can't search in autocomplete", e);
            });
        },
      );
    }
  }

  function save(event) {
    event.target.classList.add('is-loading');
    event.target.disabled = true;

    let data = {
      _csrf: window.SAILS_LOCALS._csrf,
    };
    document.querySelectorAll('#modal-edit input').forEach(input => {
      if (input.disabled) {
        return true;
      }

      let value;
      if (input.type === 'number') {
        value = parseInt(input.value) || 0;
      } else if (input.type === 'checkbox') {
        value = input.checked;
      } else {
        value = input.value;
      }

      data[input.getAttribute('name')] = value;
    });

    const id = document.querySelector('#modal-edit input[name="id"]').value;

    fetch(`/${model}/${id}`, {
        method: id ? 'PATCH' : 'POST',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })
      .then(response => {
        if (!response.ok) {
          throw new Error();
        }
        notify('Model successfully saved');
      })
      .catch(err => {
        notify("Can't save model", false);
      })
      .then(() => {
        event.target.classList.remove('is-loading');
        event.target.disabled = false;
        closeEditModal();
      });
  }

  function destroy(event, itemIndex) {
    const item = SAILS_LOCALS.all[itemIndex];

    event.target.classList.add('is-loading');
    event.target.disabled = true;

    fetch(`/${model}/${item.id}`, {
        method: 'DELETE',
        headers: {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json',
        },
      })
      .then(response => {
        if (!response.ok) {
          throw new Error();
        }
        notify('Model successfully deleted');
      })
      .catch(err => {
        notify("Can't delete model", false);
        console.error(err);
      })
      .then(() => {
        event.target.classList.remove('is-loading');
        event.target.disabled = false;
      });
  }

</script>

<%- exposeLocalsToBrowser() %>
